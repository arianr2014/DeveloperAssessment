// <auto-generated />
using System;
using AreyesAssessment.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AreyesAssessment.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AreyesAssessment.Data.Entities.ChangeLog", b =>
                {
                    b.Property<int>("ChangelogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ChangeDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ChangelogID");

                    b.ToTable("changelog");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Donor", b =>
                {
                    b.Property<int>("DonorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DonorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DonorID");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DonorID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PaymentID");

                    b.HasIndex("DonorID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Pledge", b =>
                {
                    b.Property<int>("PledgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DonorID")
                        .HasColumnType("int");

                    b.Property<decimal>("PledgeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PledgeDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PledgeID");

                    b.HasIndex("DonorID");

                    b.ToTable("Pledges");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.PledgePayment", b =>
                {
                    b.Property<int>("PledgeID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.HasKey("PledgeID", "PaymentID");

                    b.HasIndex("PaymentID");

                    b.ToTable("PledgePayments");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Payment", b =>
                {
                    b.HasOne("AreyesAssessment.Data.Entities.Donor", "Donor")
                        .WithMany("Payments")
                        .HasForeignKey("DonorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Pledge", b =>
                {
                    b.HasOne("AreyesAssessment.Data.Entities.Donor", "Donor")
                        .WithMany("Pledges")
                        .HasForeignKey("DonorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.PledgePayment", b =>
                {
                    b.HasOne("AreyesAssessment.Data.Entities.Payment", "Payment")
                        .WithMany("PledgePayments")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AreyesAssessment.Data.Entities.Pledge", "Pledge")
                        .WithMany("PledgePayments")
                        .HasForeignKey("PledgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Pledge");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Donor", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Pledges");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Payment", b =>
                {
                    b.Navigation("PledgePayments");
                });

            modelBuilder.Entity("AreyesAssessment.Data.Entities.Pledge", b =>
                {
                    b.Navigation("PledgePayments");
                });
#pragma warning restore 612, 618
        }
    }
}
